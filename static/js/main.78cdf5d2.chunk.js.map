{"version":3,"sources":["components/SideMenus.jsx","components/Header.jsx","components/PageHeader.jsx","components/Controls/Input.jsx","components/Controls/RadioGroup.jsx","components/Controls/Select.jsx","components/Controls/Checkbox.jsx","components/Controls/DatePickers.jsx","components/Controls/Button.jsx","components/Controls/ActionButton.jsx","components/Controls/Controls.js","components/useForm.jsx","services/employeeService.js","pages/Employee/EmployeeForm.jsx","components/Controls/useTable.jsx","components/Controls/Popup.jsx","components/Controls/Notification.jsx","components/Controls/ConfirmDialog.jsx","pages/Employee/Employee.jsx","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","SideMenus","classes","className","root","searchInput","opacity","padding","borderRadius","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","pageCardHeader","marginBottom","pageCardIcon","pageCardBody","paddingLeft","pageTitle","pageSubtitle","PageHeader","props","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","Input","label","name","type","value","onChange","error","others","TextField","id","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","key","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefaultPara","DatePickers","margin","Button","size","text","onClick","minWidth","secondary","primary","ActionButton","Controls","children","Form","other","KEYS","insertEmployee","data","employees","getAllEmployee","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentID","genderItems","initializeFValue","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","recordsForEdit","addOrEdit","validate","fieldValues","values","temp","errors","length","test","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","Box","sx","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","message","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","NotListedLocationOutlined","DialogActions","onConfirm","paperForm","newButton","right","Employee","setRecordsForEdit","employeeService","setRecords","setFilterFn","onDelete","employee","filter","fontSize","InputProps","InputAdornment","toLowerCase","includes","startIcon","AddReaction","TableBody","openInPopup","EditOutlined","DeleteOutlined","recordIndex","findIndex","theme","createTheme","palette","main","appMenu","transform","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78cdf5d2.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    sideMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        width: '320px',\r\n        height: '100%',\r\n        backgroundColor: '#253053',\r\n    }\r\n});\r\n\r\n\r\nfunction SideMenus() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.sideMenu}>\r\n            Im side menu\r\n        </div>\r\n    );\r\n}\r\nexport default SideMenus;","import { AppBar, Badge, Grid, IconButton, InputBase, Toolbar } from '@mui/material';\r\nimport React from 'react'\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    searchInput: {\r\n        opacity: '0.6',\r\n        padding: '0px 8px',\r\n        borderRadius: '5px',\r\n        '&:hover': {\r\n            backgroundColor: '#f2f2f2'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: '8px'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position='static'\r\n                className={classes.root}\r\n            >\r\n                <Toolbar>\r\n                    <Grid\r\n                        container\r\n                        alignItems='center'>\r\n                        <Grid item>\r\n                            <InputBase\r\n                                placeholder='search topics'\r\n                                className={classes.searchInput}\r\n                                startAdornment={<SearchIcon />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item sm></Grid>\r\n                        <Grid item>\r\n                            <IconButton>\r\n                                <Badge badgeContent={4} color=\"secondary\">\r\n                                    <NotificationsNoneIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton>\r\n                                <Badge badgeContent={5} color=\"primary\">\r\n                                    <EmailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton>\r\n                                <PowerSettingsNewIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import { Card, Paper, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#fdfdff\"\r\n    },\r\n    pageCardHeader: {\r\n        display: 'flex',\r\n        padding: '32px',\r\n        marginBottom: '16px'\r\n    },\r\n    pageCardIcon: {\r\n        display: 'inline-block',\r\n        color: \"#3c44b1\",\r\n        padding: '8px',\r\n\r\n    },\r\n    pageCardBody:{\r\n        paddingLeft:'32px'\r\n    },\r\n    pageTitle: {\r\n\r\n    },\r\n    pageSubtitle: {\r\n        opacity: 0.6,\r\n    }\r\n\r\n})\r\n\r\nfunction PageHeader(props) {\r\n    const { title, subTitle, icon } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageCardHeader}>\r\n                <Card className={classes.pageCardIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageCardBody}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component='div'\r\n                        className={classes.pageTitle}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='subTitle1'\r\n                        component='div'\r\n                        className={classes.pageSubtitle}\r\n                    >\r\n                        {subTitle}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default PageHeader;","import { TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction Input(props) {\r\n  const { label, name, type, value, onChange, error = null, ...others } = props;\r\n  return (\r\n    <TextField\r\n      id=\"outlined-basic\"\r\n      variant=\"outlined\"\r\n      label={label}\r\n      name={name}\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...others}\r\n      {...(error && { error: true, helperText: error })}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { FormControl, FormControlLabel, FormLabel, RadioGroup as MuiRadioGroup, Radio } from '@mui/material';\r\nimport React from 'react';\r\n\r\nfunction RadioGroup(props) {\r\n    const { label, name, value, onChange, items } = props;\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup\r\n                row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default RadioGroup;","import {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select as MuiSelect,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction Select(props) {\r\n  const { label, name, value, error = null, onChange, options } = props;\r\n  return (\r\n    <FormControl variant=\"outlined\" {...(error && { error: true })}>\r\n      <InputLabel>{label}</InputLabel>\r\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\r\n        <MenuItem value=\"\">None</MenuItem>\r\n        {options.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.title}\r\n          </MenuItem>\r\n        ))}\r\n      </MuiSelect>\r\n      {error && <FormHelperText>{error}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@mui/material';\r\nimport React from 'react';\r\n\r\nfunction Checkbox(props) {\r\n\r\n    const { label, name, value, onChange } = props;\r\n\r\n    const convertToDefaultPara = (name, value) => ({\r\n        target: {\r\n            name,\r\n            value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={\r\n                    <MuiCheckbox\r\n                        color='primary'\r\n                        name={name}\r\n                        checked={value}\r\n                        onChange={e => onChange(convertToDefaultPara(name, e.target.checked))}\r\n                    />\r\n                }\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default Checkbox;","// import React from 'react';\r\n// import { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n// import DataFnsUtils from \"@date-io/date-fns\";\r\n\r\nfunction DatePickers(props) {\r\n  // const { label, name, value, onChange } = props;\r\n  // const convertToDefaultPara = (name, value) => ({\r\n  //     target: {\r\n  //         name,\r\n  //         value\r\n  //     }\r\n  // })\r\n  // return (\r\n  //     <MuiPickersUtilsProvider utils={DataFnsUtils}>\r\n  //         <KeyboardDatePicker\r\n  //             disableToolbar\r\n  //             variant=\"inline\"\r\n  //             inputValue='outlined'\r\n  //             label={label}\r\n  //             format='MMM/dd/yyyy'\r\n  //             name={name}\r\n  //             value={value}\r\n  //             onChange={date => onChange(convertToDefaultPara(name, date))}\r\n  //         >\r\n  //         </KeyboardDatePicker>\r\n  //     </MuiPickersUtilsProvider>\r\n  // );\r\n}\r\n\r\nexport default DatePickers;\r\n","import React from 'react';\r\nimport { Button as MuiButton } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"4px\"\r\n    }\r\n})\r\n\r\nfunction Button(props) {\r\n\r\n    const { variant, color, size, text, onClick, ...others } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"secondary\"}\r\n            onClick={onClick}\r\n            {...others}\r\n            classes={{ root: classes.root }}\r\n        >\r\n            {text}\r\n        </MuiButton>\r\n    );\r\n}\r\n\r\nexport default Button;","import { Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 0,\r\n    margin: \"4px\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: \"#FEDFD7\",\r\n    \"& .MuiButton-label\": {\r\n      color: \"#F83703\",\r\n    },\r\n  },\r\n  primary: {\r\n    backgroundColor: \"#EC3504\",\r\n    \"& .MuiButton-label\": {\r\n      color: \"#FFE4DD\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction ActionButton(props) {\r\n  const classes = useStyles();\r\n  const { color, children, onClick } = props;\r\n  return (\r\n    <Button className={`${classes.root} ${classes[color]}`} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default ActionButton;\r\n","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePickers from \"./DatePickers\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\nconst Controls = {\r\n  Input,\r\n  RadioGroup,\r\n  Select,\r\n  Checkbox,\r\n  DatePickers,\r\n  Button,\r\n  ActionButton,\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"80%\",\r\n      margin: \"8px\",\r\n    },\r\n  },\r\n});\r\n\r\n// useForm START\r\nexport function useForm(initializeFValue, validateOnChange = false, validate) {\r\n  const [values, setValues] = useState(initializeFValue);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n\r\n    //for onChange validate\r\n    if (validateOnChange) validate({ [name]: value });\r\n  };\r\n\r\n  //After reset button click its work\r\n  const resetForm = () => {\r\n    setValues(initializeFValue);\r\n    setErrors({});\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n}\r\n// useForm END\r\n\r\n// Form Component START\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n\r\n  return (\r\n    <form className={classes.root} {...other}>\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </form>\r\n  );\r\n}\r\n// Form Component END\r\n","const KEYS = {\r\n  employees: \"employee\",\r\n  employeeId: \"employeeId\",\r\n};\r\n\r\nexport const getDepartmentCollection = () => [\r\n  { id: \"1\", title: \"Development\" },\r\n  { id: \"2\", title: \"Marketing\" },\r\n  { id: \"3\", title: \"SQA\" },\r\n  { id: \"4\", title: \"Testing\" },\r\n  { id: \"5\", title: \"Accounting\" },\r\n];\r\n\r\nexport function insertEmployee(data) {\r\n  let employees = getAllEmployee();\r\n  data[\"id\"] = generateEmployeeId();\r\n  employees.push(data);\r\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n  let employees = getAllEmployee();\r\n  let recordIndex = employees.findIndex((x) => x.id === data.id);\r\n  employees[recordIndex] = { ...data };\r\n  localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n  let employee = getAllEmployee();\r\n  employee = employee.filter((x) => x.id !== id);\r\n  localStorage.setItem(KEYS.employees, JSON.stringify(employee));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n  if (localStorage.getItem(KEYS.employeeId) == null)\r\n    localStorage.setItem(KEYS.employeeId, \"0\");\r\n\r\n  var id = parseInt(localStorage.getItem(KEYS.employeeId));\r\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\r\n  return id;\r\n}\r\n\r\nexport function getAllEmployee() {\r\n  if (localStorage.getItem(KEYS.employees) == null)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify([]));\r\n  let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n  //map departmentID to department title\r\n  let departments = getDepartmentCollection();\r\n  return employees.map((x) => ({\r\n    ...x,\r\n    department: departments[x.departmentID - 1].title,\r\n  }));\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport Controls from \"../../components/Controls/Controls\";\r\nimport { useForm, Form } from \"../../components/useForm\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\nconst genderItems = [\r\n  { id: \"male\", title: \"Male\" },\r\n  { id: \"female\", title: \"Female\" },\r\n  { id: \"other\", title: \"Other\" },\r\n];\r\n\r\nconst initializeFValue = {\r\n  id: 0,\r\n  fullName: \"\",\r\n  email: \"\",\r\n  mobile: \"\",\r\n  city: \"\",\r\n  gender: \"male\",\r\n  departmentID: \"\",\r\n  hireDate: new Date(),\r\n  isPermanent: false,\r\n};\r\n\r\nfunction EmployeeForm(props) {\r\n  //Form validation\r\n  const { recordsForEdit, addOrEdit } = props;\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName =\r\n        fieldValues.fullName.length > 2 ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\";\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile =\r\n        fieldValues.mobile.length > 10 ? \"\" : \"Minimum 11 number required\";\r\n    if (\"departmentID\" in fieldValues)\r\n      temp.departmentID =\r\n        fieldValues.departmentID.length !== 0 ? \"\" : \"This field is required.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  //Reuseable Form calling\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initializeFValue, true, validate); //if you onchange validation want pass true otherwise pass false\r\n\r\n  //After submit form handler\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      // employeeService.insertEmployee(values);\r\n      // resetForm();\r\n      addOrEdit(values, resetForm);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recordsForEdit != null)\r\n      setValues({\r\n        ...recordsForEdit,\r\n      });\r\n  }, [recordsForEdit]);\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Controls.Input\r\n              label=\"Full name\"\r\n              name=\"fullName\"\r\n              type=\"text\"\r\n              value={values.fullName}\r\n              onChange={handleInputChange}\r\n              error={errors.fullName}\r\n            />\r\n            <Controls.Input\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={values.email}\r\n              onChange={handleInputChange}\r\n              error={errors.email}\r\n            />\r\n            <Controls.Input\r\n              label=\"Mobile\"\r\n              name=\"mobile\"\r\n              type=\"number\"\r\n              value={values.mobile}\r\n              onChange={handleInputChange}\r\n              error={errors.mobile}\r\n            />\r\n            <Controls.Input\r\n              label=\"City\"\r\n              name=\"city\"\r\n              type=\"text\"\r\n              value={values.city}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Controls.RadioGroup\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n              value={values.gender}\r\n              onChange={handleInputChange}\r\n              items={genderItems}\r\n            />\r\n            <Controls.Select\r\n              label=\"Department\"\r\n              name=\"departmentID\"\r\n              value={values.departmentID}\r\n              onChange={handleInputChange}\r\n              options={employeeService.getDepartmentCollection()}\r\n              error={errors.departmentID}\r\n            />\r\n            {/* <Controls.DatePickers\r\n                            label=\"Hire Date\"\r\n                            name=\"hireDate\"\r\n                            value={values.hireDate}\r\n                            onChange={handleInputChange}\r\n                        /> */}\r\n            <Controls.Checkbox\r\n              label=\"Permanent Employee\"\r\n              name=\"isPermanent\"\r\n              value={values.isPermanent}\r\n              onChange={handleInputChange}\r\n            />\r\n            <div>\r\n              <Controls.Button type=\"submit\" text=\"Submit\" />\r\n              <Controls.Button\r\n                text=\"Reset\"\r\n                color=\"primary\"\r\n                onClick={resetForm}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployeeForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  table: {\r\n    marginTop: \"32px\",\r\n    \"& thead th\": {\r\n      fontWeight: \"600\",\r\n      backgroundColor: \"#3498DB\",\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#F5FFFE\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction useTable(records, headCells, filterFn) {\r\n  const classes = useStyles();\r\n\r\n  const pages = [5, 10, 25];\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n  const [order, setOrder] = useState();\r\n  const [orderBy, setOrderBy] = useState();\r\n\r\n  const TblContainer = (props) => (\r\n    <Table className={classes.table}>{props.children}</Table>\r\n  );\r\n\r\n  const TblHead = (props) => {\r\n    const handleSortRequest = (cellId) => {\r\n      const isAsc = orderBy === cellId && order === \"asc\";\r\n      setOrder(isAsc ? \"desc\" : \"asc\");\r\n      setOrderBy(cellId);\r\n    };\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headCells.map((headCell) => (\r\n            <TableCell key={headCell.id}>\r\n              {headCell.disableSorting ? (\r\n                headCell.label\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === headCell.id}\r\n                  direction={orderBy === headCell.id ? order : \"asc\"}\r\n                  onClick={() => {\r\n                    handleSortRequest(headCell.id);\r\n                  }}\r\n                >\r\n                  {headCell.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const TblPagination = () => (\r\n    <TablePagination\r\n      component=\"div\"\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      page={page}\r\n      rowsPerPageOptions={pages}\r\n      rowsPerPage={rowsPerPage}\r\n      count={records.length}\r\n      onPageChange={handleChangePage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  const recordsAfterPagingAndSorting = () => {\r\n    return stableSort(\r\n      filterFn.fn(records),\r\n      getComparator(order, orderBy)\r\n    ).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n  };\r\n\r\n  return { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting };\r\n}\r\n\r\nexport default useTable;\r\n","import React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport Controls from \"../../components/Controls/Controls\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst useStyles = makeStyles({\r\n  dialogWrapper: {\r\n    padding: \"16px\",\r\n    position: \"absolute\",\r\n    top: \"40px\",\r\n  },\r\n});\r\n\r\nfunction Popup(props) {\r\n  const classes = useStyles();\r\n  const { title, children, openPopup, setOpenPopup } = props;\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      maxWidth=\"md\"\r\n      classes={{ paper: classes.dialogWrapper }}\r\n    >\r\n      <DialogTitle>\r\n        <Box component=\"div\" sx={{ display: \"flex\" }}>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: \"1\" }}>\r\n            {title}\r\n          </Typography>\r\n          <Controls.ActionButton\r\n            color=\"secondary\"\r\n            onClick={() => setOpenPopup(false)}\r\n          >\r\n            <CloseIcon />\r\n          </Controls.ActionButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent dividers>{children}</DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import { Alert, Snackbar } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n});\r\n\r\nfunction Notification(props) {\r\n  const { notify, setNotify } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setNotify({\r\n      ...notify,\r\n      isOpen: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      className={classes.root}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      open={notify.isOpen}\r\n      autoHideDuration={2000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} severity={notify.type}>\r\n        {notify.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import { NotListedLocationOutlined } from \"@mui/icons-material\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport Controls from \"../../components/Controls/Controls\";\r\n\r\nconst useStyles = makeStyles({\r\n  titleIcon: {\r\n    backgroundColor: \"#E33E5A\",\r\n    color: \"#ED8A0A\",\r\n    \"& hover\": {\r\n      backgroundColor: \"#FDDB3A\",\r\n      color: \"#FFB423f\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction ConfirmDialog(props) {\r\n  const { confirmDialog, setConfirmDialog } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog open={confirmDialog.isOpen}>\r\n      <DialogTitle>\r\n        <IconButton disableRipple className={classes.titleIcon}>\r\n          <NotListedLocationOutlined />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"h6\">{confirmDialog.title}</Typography>\r\n        <Typography variant=\"subtitle1\">{confirmDialog.subTitle}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Controls.Button\r\n          text=\"No\"\r\n          color=\"primary\"\r\n          onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\r\n        />\r\n        <Controls.Button\r\n          text=\"Yes\"\r\n          color=\"secondary\"\r\n          onClick={confirmDialog.onConfirm}\r\n        />\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useState } from \"react\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport Controls from \"../../components/Controls/Controls\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport useTable from \"../../components/Controls/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport PopUp from \"../../components/Controls/Popup\";\r\nimport Notification from \"../../components/Controls/Notification\";\r\nimport {\r\n  InputAdornment,\r\n  Paper,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport {\r\n  AddReaction,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  Search,\r\n} from \"@mui/icons-material\";\r\nimport ConfirmDialog from \"../../components/Controls/ConfirmDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  paperForm: {\r\n    margin: \"8px\",\r\n    padding: \"8px\",\r\n  },\r\n  searchInput: {\r\n    width: \"75%\",\r\n  },\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"-10px\",\r\n  },\r\n});\r\n\r\nconst headCells = [\r\n  { id: \"fullName\", label: \"Employee Name\" },\r\n  { id: \"email\", label: \"Email Address (Personal)\" },\r\n  { id: \"mobile\", label: \"Mobile Number\" },\r\n  { id: \"department\", label: \"Department\" },\r\n  { id: \"action\", label: \"Action\", disableSorting: true },\r\n];\r\n\r\nfunction Employee() {\r\n  const classes = useStyles();\r\n  const [recordsForEdit, setRecordsForEdit] = useState(null);\r\n  const [records, setRecords] = useState(employeeService.getAllEmployee());\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [notify, setNotify] = useState({\r\n    isOpen: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n  });\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\r\n    useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = (e) => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n      fn: (items) => {\r\n        if (target.value === \"\") return items;\r\n        else\r\n          return items.filter((x) =>\r\n            x.fullName.toLowerCase().includes(target.value)\r\n          );\r\n      },\r\n    });\r\n  };\r\n\r\n  const addOrEdit = (employee, resetForm) => {\r\n    if (employee.id === 0) employeeService.insertEmployee(employee);\r\n    else employeeService.updateEmployee(employee);\r\n    resetForm();\r\n    setRecordsForEdit(null);\r\n    setOpenPopup(false);\r\n    setRecords(employeeService.getAllEmployee());\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Submitted Successfully\",\r\n      type: \"success\",\r\n    });\r\n  };\r\n\r\n  const openInPopup = (item) => {\r\n    setRecordsForEdit(item);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false,\r\n    });\r\n    employeeService.deleteEmployee(id);\r\n    setRecords(employeeService.getAllEmployee());\r\n    setNotify({\r\n      isOpen: true,\r\n      message: \"Deleted Successfully\",\r\n      type: \"warning\",\r\n    });\r\n  };\r\n\r\n  const [confirmDialog, setConfirmDialog] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    subTitle: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"New Employee\"\r\n        subTitle=\"Form Design and validation\"\r\n        icon={<GroupIcon fontSize=\"large\" />}\r\n      />\r\n      <Paper className={classes.paperForm}>\r\n        <Toolbar>\r\n          <Controls.Input\r\n            className={classes.searchInput}\r\n            label=\"Search Employee\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Search />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handleSearch}\r\n          />\r\n          <Controls.Button\r\n            className={classes.newButton}\r\n            text=\"Add New\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddReaction />}\r\n            onClick={() => {\r\n              setOpenPopup(true);\r\n              setRecordsForEdit(null);\r\n            }}\r\n          />\r\n        </Toolbar>\r\n\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.fullName}</TableCell>\r\n                <TableCell>{item.email}</TableCell>\r\n                <TableCell>{item.mobile}</TableCell>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>\r\n                  <Controls.ActionButton\r\n                    onClick={() => openInPopup(item)}\r\n                    color=\"primary\"\r\n                  >\r\n                    <EditOutlined fontSize=\"small\" />\r\n                  </Controls.ActionButton>\r\n                  <Controls.ActionButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      setConfirmDialog({\r\n                        isOpen: true,\r\n                        title: \"Are you sure to delete this record?\",\r\n                        subTitle: \"You can't undo this operation\",\r\n                        onConfirm: () => {\r\n                          onDelete(item.id);\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    <DeleteOutlined fontSize=\"small\" />\r\n                  </Controls.ActionButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n\r\n        <TblPagination />\r\n      </Paper>\r\n      <PopUp\r\n        title=\"Employee Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <EmployeeForm addOrEdit={addOrEdit} recordsForEdit={recordsForEdit} />\r\n      </PopUp>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Employee;\r\n","import SideMenus from \"../components/SideMenus\";\r\nimport Header from \"../components/Header\";\r\nimport { makeStyles, ThemeProvider } from \"@mui/styles\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport Employee from \"../pages/Employee/Employee\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fefefe\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  appMenu: {\r\n    paddingLeft: \"320px\",\r\n    width: \"100%\",\r\n    transform: \"translateZ(0)\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <SideMenus />\r\n        <div className={classes.appMenu}>\r\n          <Header />\r\n          <Employee />\r\n        </div>\r\n        <CssBaseline />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nprocess.env.NODE_ENV !== 'development' ?\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  ) :\r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}